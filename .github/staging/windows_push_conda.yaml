name: Windows Build with Conda

on:
  push:
  workflow_dispatch:

env:
  #General variables
  numpy_version: "numpy==1.19.5" # replace with only 'numpy' if no version needed
  python_versions: 3.8
  pybind_version: "2.6.0"
  #Windows variables
  python_executable: "C:/hostedtoolcache/windows/Python/3.8.10/x64/python.exe" #Cmake needs this to find python on windows

jobs:
  Windows:
    name: Windows
    runs-on: windows-2019
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: ${{ env.python_versions }}

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2.1.1
        with:
          python-version: ${{ env.python_versions }}

      - name: Install python and Conda dependencies
        shell: bash
        run: |
          py -$python_versions -m pip install pytest $numpy_version opencv-python
          $CONDA/condabin/conda.bat install -c conda-forge $numpy_version libusb eigen boost opencv glfw glew gtest dirent pybind11==$pybind_version libopencv

      - name: Build openEB
        shell: bash
        run: |
          mkdir build && cd build
          cmake -A x64 -DCMAKE_PREFIX_PATH="$CONDA/envs/test/Library" \
                -D Python3_EXECUTABLE=$python_executable \
                -DOPENEB_BUILD_TESTS=ON ..
          cmake --build . --config Release --parallel 4

      - name: Move DLLs into /build
        shell: bash
        run: |
          find C:/Miniconda/envs/test -name '*.dll' -exec cp "{}" build/py3/Release \;
          cp -r build/py3/Release/{boost,lib}*.dll build/bin/Release

      - name: Getting datasets from storage
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: upload_datasets.yaml
          workflow_conclusion: success
          name: datasets
          path: datasets

      - name: Ctest suite
        shell: powershell
        run: |
          cd build
          utils\scripts\setup_env.bat
          ctest -C Release --output-on-failure
